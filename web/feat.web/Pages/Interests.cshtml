@page
@using feat.web.Enums
@using feat.web.Extensions
@using feat.web.Models
@model InterestsModel
@{
    ViewBag.Title = "Explore your options after school or college - GOV.UK";
    ViewBag.SectionTitle = "What courses, subjects, jobs, or careers are you interested in?";
}


@section BeforeContent {
    <govuk-back-link href="@Url.Page(Model.Search.GetBackPage("Interests"))">Back</govuk-back-link>
}

<h1 class="govuk-heading-l">@ViewBag.SectionTitle</h1>
<p class="govuk-body">
    You can be as specific as you like. For example:
</p>
<ul class="govuk-list govuk-list--bullet">
    <li>maths</li>
    <li>bricklaying</li>
    <li>working with animals</li>
</ul>
<p>If you skip this question, the search results will be everything in your chosen location.</p>

<!--  UserInterests-->
<form method="post" >
    
    <fieldset class="govuk-fieldset moj-add-another__item">
        <div class="govuk-form-group">
            
            <govuk-input input-class="govuk-input--width-20" spellcheck="true" for="UserInterest1"
                         id="UserInterests1"
                         value="@(Model.UserInterest1)">
                <govuk-input-label class="govuk-heading-m">
                    Interest 1 @(Model.FirstOptionMandatory ? string.Empty : "(Optional)" )
                </govuk-input-label>
            </govuk-input>
            <govuk-input input-class="govuk-input--width-20" spellcheck="true" for="UserInterest2"  
                         id="UserInterests2"
                         value="@(Model.UserInterest2)">
                <govuk-input-label class="govuk-heading-m">
                    Interest 2 (Optional)
                </govuk-input-label>
            </govuk-input>
            <govuk-input input-class="govuk-input--width-20" spellcheck="true" for="UserInterest3"  
                         id="UserInterests3"
                         value="@(Model.UserInterest3)">
                <govuk-input-label class="govuk-heading-m">
                    Interest 3 (Optional)
                </govuk-input-label>
            </govuk-input>
            
        </div>
    </fieldset>
    <div class="govuk-button-group">
        <govuk-button type="submit">Continue</govuk-button>
    </div>
</form>

@{
    /* Alternative approach using a loop to generate input fields
     
    int numberofInterests = 3;

    for (int i = 0; i < numberofInterests; i++)
    {
        int fieldCount = i + 1;

        <govuk-input id="UserInterests[@i]" input-class="govuk-input--width-20" spellcheck="true" for="UserInterests"
                     value="@(Model.UserInterests != null && Model.UserInterests.Count > fieldCount ? Model.UserInterests[i] : null)">
            <govuk-input-label class="govuk-heading-m">
                Interest @fieldCount @((fieldCount == 1 && Model.FirstOptionMandatory) ? string.Empty : "(Optional)")
            </govuk-input-label>
        </govuk-input>
    }
    */
}